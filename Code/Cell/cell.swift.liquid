
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit
import RxSwift

class {{ prefix }}{{ module_info.name }}Cell: UICollectionViewCell, BaseActionViewProtocol {
	
	var delegate: BaseViewActionDelegate?

	override init(frame: CGRect) {
		super.init(frame: frame)
		configureViews()
		configureConstraits()
	}
    
	required init?(coder aDecoder: NSCoder) {
		fatalError("init(coder:) has not been implemented")
	}

	private var stackView: UIStackView!
	private var titleLabel: UILabel!
	private var imageView: UIImageView!
    
	private func configureViews() {
        	
		stackView = { let i = UIStackView()
			i.axis = .horizontal
			i.spacing = 16
			return i
		}()
        
		imageView = { let i = UIImageView()
			i.contentMode = .scaleAspectFill
			i.clipsToBounds = true
			return i
		}()
                
		titleLabel = { let i = UILabel()
			i.font = .systemFont(ofSize: 16)
			i.textColor = .black
			return i
        }()


		contentView.addSubview(stackView)
        
		stackView.addArrangedSubview(imageView)
		stackView.addArrangedSubview(titleLabel)
	}

	private func configureConstraits() {
        	
		stackView.snp.makeConstraints{ (make) in
			make.edges.equalTo(0)
		}
        
        imageView.snp.makeConstraints{ (make) in
            make.width.equalTo(120)
        }
	}


	override func prepareForReuse() {
		super.prepareForReuse()
		imageView.kf.cancelDownloadTask()
	}
    
	func configure(viewModel vm: Any?) {
        guard let viewModel = vm as? {{ prefix }}{{ module_info.name }}CellVM else { return }
        
		titleLabel.text = viewModel.title
        
        imageView.setImage(with: viewModel.imageUrl, imageSize: .init(width: 120, height: 120), cornerRadius: 30)
    }

    static func height(for width: CGFloat, viewModel: Any?) -> CGFloat {
        return 120
    }
}
