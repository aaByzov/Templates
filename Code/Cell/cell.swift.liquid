//
//  {{ prefix }}{{ module_info.name }}{{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import UIKit
import RxSwift

class {{ prefix }}{{ module_info.name }}Cell: UICollectionViewCell, BaseCellProtocol {
	
	var delegate: BaseCellActionDelegate?

	override init(frame: CGRect) {
		super.init(frame: frame)
		configureViews()
		configureConstraits()
	}
    
	required init?(coder aDecoder: NSCoder) {
		fatalError("init(coder:) has not been implemented")
	}

	private var stackView: UIStackView!
	private var titleLabel: UILabel!
	private var imageView: UIImageView!
    
	private func configureViews() {
        	
		stackView = { let i = UIStackView()
			i.axis = .horizontal
			i.spacing = 16
			return i
		}()
        
		imageView = { let i = UIImageView()
			i.contentMode = .center
			i.clipsToBounds = true
			return i
		}()
                
		titleLabel = { let i = UILabel()
			i.font = .mediumFont(size: 16)
			i.textColor = .textColor
			return i
        	}()


		contentView.addSubview(stackView)
        
		stackView.addArrangedSubview(imageView)
		stackView.addArrangedSubview(titleLabel)
	}

	private func configureConstraits() {
        	
		stackView.snp.makeConstraints{ (make) in
			make.edges.equalTo(0)
		}
	}

	override func prepareForReuse() {
		super.prepareForReuse()
		imageView.kf.cancelDownloadTask()
	}
    
	func configure(viewModel vm: Any?) {
		let viewModel: {{ prefix }}{{ module_info.name }}CellVM = vm as! {{ prefix }}{{ module_info.name }}CellVM
        
		titleLabel.text = viewModel.title
        
		imageView.kf.setImage(with: viewModel.imageUrl,
                              	      placeholder: nil,
                              	options: [
					.forceRefresh,
					.transition(.fade(1))
				])
    }
}
